services:
  postgres:
    image: postgres:15-alpine
    container_name: fitbyte-postgres
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - fitbyte-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: fitbyte-minio
    env_file: .env
    ports:
      - "${MINIO_PORT}:9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data
    command: server /data ":9001"
    networks:
      - fitbyte-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fitbyte-app
    env_file: .env
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSL_MODE}
      APP_ENV: ${APP_ENV}
      APP_PORT: ${APP_PORT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY_ID}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
    ports:
      - "${APP_PORT}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - fitbyte-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  fitbyte-network:
    driver: bridge
